# 构建golang运行环境 使用别名：builder
FROM golang:1.18 as builder

# 设置环境变量
ENV HOME=/app \
    GO111MODULE=on \
    CGO_ENABLED=1 \
    GOOS=linux \
    GOARCH=amd64 \
    GOPROXY=https://goproxy.cn,direct

# 设置工作目录 - 我们所有的文件都存放在工作目录中
WORKDIR /app
COPY . .

# 下载依赖
RUN go mod download

# 编译app
RUN go build -o main main.go


################################################################################
##                                   START
################################################################################
# 构建oracle instance client
FROM oraclelinux:8 as build_final

ARG release=19
ARG update=20

RUN cd /opt/

RUN yum install tar wget && \
    wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-8.repo && \
    yum clean all && yum makecache \

RUN  yum -y install oracle-release-el8 && yum-config-manager --enable ol8_oracle_instantclient && \
     yum -y install oracle-instantclient${release}.${update}-basic oracle-instantclient${release}.${update}-devel oracle-instantclient${release}.${update}-sqlplus && \
     rm -rf /var/cache/yum


RUN wget http://ftp.gnu.org/gnu/glibc/glibc-2.31.tar.gz && \
    yum -y install make gcc bison python3 gcc-c++

# 设置工作目录
ENV WORKDIR /go/src

# 将上个容器编译的二进制文件复制到 工作目录
# 也就是：copy golang环境/工作目录/demo alpine环境/工作目录
COPY --from=builder /app/main $WORKDIR/main
RUN mkdir -p $WORKDIR/config/
COPY --from=builder /app/config/config_pro.toml $WORKDIR/config/config.toml
RUN mkdir -p $WORKDIR/public/
COPY --from=builder /app/public/ $WORKDIR/public/
RUN mkdir -p $WORKDIR/packed/
COPY --from=builder /app/packed/ $WORKDIR/packed/

RUN chmod +x $WORKDIR/main
RUN chmod +x $WORKDIR/config/config.toml
RUN chmod +x $WORKDIR/packed/getMpp.py
RUN ls

# 所以这里执行的命令是：/bin/demo
WORKDIR $WORKDIR
#CMD ./main
